const e=location.pathname.split("/").slice(0,-1).join("/"),l=[e+"/_app/immutable/entry/app.QCMYz1To.js",e+"/_app/immutable/nodes/0.BNMG2A3R.js",e+"/_app/immutable/nodes/1.BQMDHUqV.js",e+"/_app/immutable/nodes/2.Rdj4pxvj.js",e+"/_app/immutable/assets/2.Qu-pP4Oz.css",e+"/_app/immutable/chunks/entry.B0UFqebK.js",e+"/_app/immutable/chunks/index.BZ6YNAep.js",e+"/_app/immutable/chunks/index.C9t4z0HB.js",e+"/_app/immutable/chunks/scheduler.B668hpvB.js",e+"/_app/immutable/entry/start.tLRD6wfC.js"],o=[e+"/adjust.svg",e+"/colorclash.png",e+"/family.svg",e+"/favicon.png",e+"/manifest.json",e+"/visibility.svg"],u="1718547683002",i=`cache-${u}`,p=[...l,...o];self.addEventListener("install",s=>{async function a(){await(await caches.open(i)).addAll(p)}s.waitUntil(a())});self.addEventListener("activate",s=>{async function a(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}s.waitUntil(a())});self.addEventListener("fetch",s=>{if(s.request.method!=="GET")return;async function a(){const t=new URL(s.request.url),n=await caches.open(i);if(p.includes(t.pathname))return n.match(t.pathname);try{const c=await fetch(s.request);return c.status===200&&n.put(s.request,c.clone()),c}catch{return n.match(s.request)}}s.respondWith(a())});
