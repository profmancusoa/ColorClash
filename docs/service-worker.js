const e=location.pathname.split("/").slice(0,-1).join("/"),o=[e+"/_app/immutable/entry/app.DkBK8n-T.js",e+"/_app/immutable/nodes/0.Dq7UBv4O.js",e+"/_app/immutable/nodes/1.C_NdWc2V.js",e+"/_app/immutable/nodes/2.NnSYwZEl.js",e+"/_app/immutable/assets/2.D_0q1McE.css",e+"/_app/immutable/chunks/entry.DFSCqxtR.js",e+"/_app/immutable/chunks/index.C-N95wP-.js",e+"/_app/immutable/chunks/scheduler.DlN8ExfC.js",e+"/_app/immutable/entry/start.Bq5rukKE.js"],u=[e+"/adjust.svg",e+"/colorclash.png",e+"/family.svg",e+"/favicon.png",e+"/manifest.json",e+"/visibility.svg"],p="1718471224761",i=`cache-${p}`,l=[...o,...u];self.addEventListener("install",s=>{async function a(){await(await caches.open(i)).addAll(l)}s.waitUntil(a())});self.addEventListener("activate",s=>{async function a(){for(const t of await caches.keys())t!==i&&await caches.delete(t)}s.waitUntil(a())});self.addEventListener("fetch",s=>{if(s.request.method!=="GET")return;async function a(){const t=new URL(s.request.url),n=await caches.open(i);if(l.includes(t.pathname))return n.match(t.pathname);try{const c=await fetch(s.request);return c.status===200&&n.put(s.request,c.clone()),c}catch{return n.match(s.request)}}s.respondWith(a())});
