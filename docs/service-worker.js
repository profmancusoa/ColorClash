const e=location.pathname.split("/").slice(0,-1).join("/"),p=[e+"/_app/immutable/entry/app.GX_lQlZb.js",e+"/_app/immutable/nodes/0.BNMG2A3R.js",e+"/_app/immutable/nodes/1.DeOUyLK-.js",e+"/_app/immutable/nodes/2.C40qrhdu.js",e+"/_app/immutable/assets/2.BEUG1P6s.css",e+"/_app/immutable/chunks/entry.CFGm-pl8.js",e+"/_app/immutable/chunks/index.BZ6YNAep.js",e+"/_app/immutable/chunks/index.C9t4z0HB.js",e+"/_app/immutable/chunks/scheduler.B668hpvB.js",e+"/_app/immutable/entry/start.Cqb1HHS6.js"],o=[e+"/adjust.svg",e+"/colorclash.png",e+"/family.svg",e+"/favicon.png",e+"/manifest.json",e+"/visibility.svg"],u="1718552592069",i=`cache-${u}`,l=[...p,...o];self.addEventListener("install",s=>{async function t(){await(await caches.open(i)).addAll(l)}s.waitUntil(t())});self.addEventListener("activate",s=>{async function t(){for(const a of await caches.keys())a!==i&&await caches.delete(a)}s.waitUntil(t())});self.addEventListener("fetch",s=>{if(s.request.method!=="GET")return;async function t(){const a=new URL(s.request.url),n=await caches.open(i);if(l.includes(a.pathname))return n.match(a.pathname);try{const c=await fetch(s.request);return c.status===200&&n.put(s.request,c.clone()),c}catch{return n.match(s.request)}}s.respondWith(t())});
